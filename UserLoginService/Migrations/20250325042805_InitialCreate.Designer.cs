// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserLoginService.Data;

#nullable disable

namespace UserLoginService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250325042805_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserLoginService.Models.UserLoginRecord", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("ip_address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("IpNumericHigh")
                        .HasColumnType("bigint")
                        .HasColumnName("ip_numeric_high");

                    b.Property<long>("IpNumericLow")
                        .HasColumnType("bigint")
                        .HasColumnName("ip_numeric_low");

                    b.Property<DateTime>("LoginTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("login_timestamp");

                    b.HasKey("UserId", "IpAddress");

                    b.HasIndex("IpAddress")
                        .HasDatabaseName("idx_user_login_records_ip_address");

                    b.HasIndex("IpNumericHigh", "IpNumericLow")
                        .HasDatabaseName("idx_user_login_records_ip_numeric_range");

                    b.HasIndex("UserId", "IpAddress")
                        .HasDatabaseName("idx_user_login_records_user_id_ip_address");

                    b.HasIndex("UserId", "IpNumericHigh", "IpNumericLow")
                        .HasDatabaseName("idx_user_login_records_user_id_ip_numeric");

                    b.HasIndex(new[] { "IpNumericHigh", "IpNumericLow" }, "IX_UserLoginRecord_IpNumeric");

                    b.ToTable("user_login_records", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
