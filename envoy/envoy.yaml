admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }
  access_log_path: /tmp/admin_access.log

static_resources:
  listeners:
  - name: userlogin_listener
    address:
      socket_address: { address: 0.0.0.0, port_value: 8080 }
    tcp_backlog_size: 1024
    per_connection_buffer_limit_bytes: 32768
    listener_filters:
    - name: envoy.filters.listener.tls_inspector
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          generate_request_id: true
          codec_type: AUTO
          stat_prefix: ingress_http
          stream_idle_timeout: 300s
          request_timeout: 300s
          drain_timeout: 60s
          delayed_close_timeout: 5s
          max_request_headers_kb: 96
          server_header_transformation: PASS_THROUGH
          common_http_protocol_options:
            idle_timeout: 300s
            max_connection_duration: 900s
            max_requests_per_connection: 10000
            max_headers_count: 100
          http_protocol_options:
            accept_http_10: true
            default_host_for_http_10: localhost
          http2_protocol_options:
            max_concurrent_streams: 1000
            initial_stream_window_size: 65536
            initial_connection_window_size: 1048576
            allow_connect: true
          access_log:
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "/dev/stdout"
              format: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%UPSTREAM_HOST%\"\n"
          route_config:
            name: local_route
            virtual_hosts:
            - name: userlogin_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route:
                  cluster: userlogin_service
                  timeout: 120s
                  retry_policy:
                    retry_on: connect-failure,refused-stream,unavailable,cancelled,resource-exhausted,503,gateway-error,reset
                    num_retries: 10
                    per_try_timeout: 30s
                    retry_back_off:
                      base_interval: 0.25s
                      max_interval: 5s
                  max_stream_duration:
                    grpc_timeout_header_max: 0s
          http_filters:
          - name: envoy.filters.http.health_check
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
              pass_through_mode: true
              headers:
                - name: ":path"
                  string_match:
                    exact: "/healthcheck"
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              suppress_envoy_headers: false

  clusters:
  - name: userlogin_service
    connect_timeout: 5s
    type: STRICT_DNS
    lb_policy: LEAST_REQUEST
    dns_refresh_rate: 5s
    respect_dns_ttl: true
    dns_lookup_family: V4_ONLY
    dns_failure_refresh_rate:
      base_interval: 2s
      max_interval: 10s
    common_lb_config:
      healthy_panic_threshold:
        value: 50
      update_merge_window: 1s
      ignore_new_hosts_until_first_hc: true
      close_connections_on_host_set_change: true
    transport_socket:
      name: envoy.transport_sockets.raw_buffer
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer
    upstream_connection_options:
      tcp_keepalive:
        keepalive_probes: 3
        keepalive_time: 30
        keepalive_interval: 5
    track_timeout_budgets: true
    http2_protocol_options: 
      max_concurrent_streams: 1000
      initial_stream_window_size: 65536
      initial_connection_window_size: 1048576
    health_checks:
      - timeout: 5s
        interval: 10s
        unhealthy_threshold: 3
        healthy_threshold: 2
        grpc_health_check: {}
    circuit_breakers:
      thresholds:
        - priority: DEFAULT
          max_connections: 10000
          max_pending_requests: 10000
          max_requests: 50000
          max_retries: 25
          track_remaining: true
        - priority: HIGH
          max_connections: 20000
          max_pending_requests: 20000
          max_requests: 100000
          max_retries: 50
          track_remaining: true
    outlier_detection:
      consecutive_5xx: 20
      interval: 15s
      base_ejection_time: 30s
      max_ejection_percent: 50
      enforcing_consecutive_5xx: 100
      enforcing_success_rate: 100
      success_rate_minimum_hosts: 3
      success_rate_request_volume: 100
      success_rate_stdev_factor: 1900
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        common_http_protocol_options:
          idle_timeout: 300s
          max_connection_duration: 900s
          max_headers_count: 100
          max_stream_duration: 300s
        explicit_http_config:
          http2_protocol_options:
            max_concurrent_streams: 1000
    load_assignment:
      cluster_name: userlogin_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: userloginservice1
                port_value: 8080
        - endpoint:
            address:
              socket_address:
                address: userloginservice2
                port_value: 8080
        - endpoint:
            address:
              socket_address:
                address: userloginservice3
                port_value: 8080
